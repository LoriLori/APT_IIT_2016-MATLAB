%% Author: Kamuran Turksoy <kturksoy@hawk.iit.edu> 2014
%% Run unscented Kalman filter
function [x_p,P_p]=m20141215_ukf_meal(y,x_a,P_a,R_n,Q_n,Gb)
y=198
x_a=[0.096; 259.26 ;0; 0; 0.06799; 0.03699 ; 1.3 ; 20]
P_a=[1.000000131305429E-6 1.6206793247259198E-13 -1.0116931098629044E-14 2.899779562593888E-28 2.0437496049217005E-13 2.6494801798895927E-13 -1.8981392258261678E-13 1.0211807471883577E-13;
 1.6206793247259198E-13 1.0000002251559415E-6 -4.552665225542461E-14 4.0285736211897745E-28 2.6358116169440614E-13 3.477334278646299E-13 -2.637025832290758E-13 1.4186946737806325E-13;
 -1.0116931098629044E-14 -4.552665225542461E-14 0.0010000000000492373 -8.145797490563103E-29 -3.0642960547478846E-14 -4.765859394658146E-14 5.3320803904981534E-14 -2.8686082470411743E-14;
 2.899779562593888E-28 4.0285736211897745E-28 -8.145797490563103E-29 0.001 4.716091913466295E-28 6.221775473831597E-28 -4.718264432602702E-28 2.538381133038516E-28;
 2.0437496049217005E-13 2.6358116169440614E-13 -3.0642960547478846E-14 4.716091913466295E-28 0.010000000000323212 4.2172621772685947E-13 -3.087061916370108E-13 1.6608097822768734E-13;
 2.6494801798895927E-13 3.477334278646299E-13 -4.765859394658146E-14 6.221775473831597E-28 4.2172621772685947E-13 0.1000000000005517 -4.072653050426681E-13 2.1910483849062697E-13;
 -1.8981392258261678E-13 -2.637025832290758E-13 5.3320803904981534E-14 -4.718264432602702E-28 -3.087061916370108E-13 -4.072653050426681E-13 0.010000000000308849 -1.6615748524027596E-13;
 1.0211807471883577E-13 1.4186946737806325E-13 -2.8686082470411743E-14 2.538381133038516E-28 1.6608097822768734E-13 2.1910483849062697E-13 -1.6615748524027596E-13 0.10000000000008939;
]
Gb=298
Q_n=1e-6*diag([1 1 1e+3 1e+3 1e+4 1e+5 1e+4 1e+5])
R_n=100;
%% Define parameters
alp=1
bet=2
K=0
n_y=size(y,1)
%% Calculate 2N+1 sigma-points based on present state covariance
L=size(x_a,1)
lamda=alp^2*(L+K)-L
W0m=lamda/(L+lamda)
W0c=W0m+(1-alp^2+bet)
Wm=[W0m 1/(2*(L+lamda))*ones(1,2*L)]
Wc=[W0c 1/(2*(L+lamda))*ones(1,2*L)]
P_a
LX=lu(P_a)
[LL, DD]=ldl(P_a)
sqrt(L+lamda)
LL
DD
DD^0.5
LL*DD^0.5
sqrt(L+lamda)*LL*DD^0.5
x_a
x_a(:,ones(1,numel(x_a)))

X_a=[x_a x_a(:,ones(1,numel(x_a)))+sqrt(L+lamda)*LL*DD^0.5 x_a(:,ones(1,numel(x_a)))-sqrt(L+lamda)*LL*DD^0.5]

%% Propagate the sigma points through the nonlinear dynamics
X_n=zeros(L,2*L+1)
x_n=zeros(L,1)
for ii=1:2*L+1
    X_n(:,ii)=f_fcn(X_a(:,ii),1)
    7+2
    X_n
    x_a
    X_n(:,ii)=m20141215_sigma_const(X_n(:,ii),eye(L),x_a,'off')
    Wm
    x_n
    X_n
    size(Wm)
    size(x_n)
    size(X_n)
    x_n=x_n+Wm(:,ii)*X_n(:,ii)
end
X_n
%% Compute the predicted covariance
X_n=[0.09500290345516701 0.09546067525244871 0.09529791545666376 0.0927368998711841 0.08988945850517138 0.0914256654889296 0.006525466980980491 0.09273689973363164 0.09288282863425047 0.09001312475155855 0.09135738365429284 0.06781479180664433 0.09273689951899806 0.1357372553867079 0.17881909415747185 -2.3418766925686896E-17 0.09273689919386013;
 257.00926070010263 215.02027319479998 216.0023695492771 216.06300333418773 215.98123358909453 215.8353951300722 215.97355313612107 208.9119007286266 215.97343730014546 216.92684803686737 216.77167452003306 215.8976644557278 215.97356061591972 254.92518666423396 215.9735476919806 223.19108535720116 215.97356061606033;
 1.7193628980578595E-4 -4.652890945610781E-25 -4.652890945610781E-25 0.17016109209689487 -1.1011951222935677E-25 -1.1011951222935677E-25 -2.7509222819942896E-26 2.997324325278235E-10 -6.776263578034402E-20 -1.0339757656912846E-25 2.651150746045763E-7 8.589168897968248E-26 0.08093111926102171 0.039472005072800485 4.0186862617293914E-11 -2.3418766925686896E-17 1.6580695971379858E-10;
 1.2093881387535705E-23 -3.618915179919496E-25 -3.618915179919496E-25 0.08944271935122601 4.6363469673074355E-5 2.4738159490502944E-5 -2.750757976505668E-26 1.0904563194710896E-10 -6.776263578034403E-20 8.771045844428847E-11 9.996213371619742E-6 -1.1102230246251564E-25 -8.134481219149403E-25 -3.217443157653761E-28 -1.4311468676808655E-26 6.938893903907228E-17 2.1612282367053882E-10;
 0.0697695698248444 0.06800000060597731 0.06800000060597731 0.06800000151914934 0.06136870192692074 0.08073050722828781 0.06799238397479056 0.06800000014497452 0.06800216620980633 0.06800000033678859 0.0679857724444677 0.10193581438040376 0.06800000041656648 0.034 0.06796385562118343 0.03994688043381578 0.06799999989802355;
 0.03790098805673721 0.03700000007194735 0.03700000007194735 0.03700000012309667 0.03306330514799366 0.03467237435596511 0.074 0.03700000054978663 0.037035497487231124 0.03700000045706156 0.03696949256195117 0.04532894210719148 0.03700000097774481 0.0736766035962449 0.0185 0.03719288490808213 0.037000000011423555;
 1.3010199687932373 1.3000000001696461 1.3000000001696461 1.300000000449243 1.3001979839920041 1.300873232120428 1.2999485409485705 1.5828427128457494 1.2998572422008399 1.3000000001271275 1.2999982349281305 1.2562045903479704 1.2999999994224596 1.1473154093948958 1.2999787107902452 0.972173042255782 1.3000000002185395;
 19.999368831377772 19.99999999990943 19.99999999990943 20.000000000121883 19.99754978420733 19.998888320164536 20.000053036016297 20.000000000472568 20.894535899965096 19.999999999900957 20.000002207398648 19.927654402858295 19.99999999995243 20.028224934843333 19.999964745199108 19.950374469533358 19.105572808784206;
]
x_n=[0.08788570364954962;
 218.46214337002178;
 0.01816028012821987;
 0.005595238600415013;
 0.06662038035919583;
 0.040589943901729215;
 1.2849618562738299;
 19.993926288077304]
Wc
Q_n
P_n=zeros(L,L)
for ii=1:2*L+1
    P_n=P_n+Wc(:,ii)*(X_n(:,ii)-x_n)*(X_n(:,ii)-x_n)'
end

P_n=P_n+Q_n

%% Instantiate the new sigma points through the observation model g_fnc
Y=zeros(n_y,2*L+1)
y_n=zeros(n_y,1)
for ii=1:2*L+1
    Y(:,ii)=g_fcn(X_n(:,ii))
    y_n=y_n+Wm(:,ii)*Y(:,ii)
end

%% Obtain the innovation covariance and the cross covariance matrices
P_yy=zeros(n_y,n_y)
P_yx=zeros(L,n_y)


for ii=1:2*L+1
    ara1=Y(:,ii)
    ara2=y_n
    resultx=(Y(:,ii)-y_n)
    P_yy=P_yy+Wc(:,ii)*(Y(:,ii)-y_n)*(Y(:,ii)-y_n)'
    P_yx=P_yx+Wc(:,ii)*(X_n(:,ii)-x_n)*(Y(:,ii)-y_n)'
end

P_yy=P_yy+R_n
P_yx
%% Perform the measurement update using the regular Kalman Filter equations
K_p=P_yx/P_yy
x_p=x_n+K_p*(y-y_n)
P_p=P_n-K_p*P_yy*K_p'
%% Perform the measurement update using the regular Kalman Filter equations

    function f=f_fcn(x,h)
        Ieff=x(1);
        Gt=x(2);
        Rc=x(3);
        Rc_1=x(4);
        p1=x(5);
        p2=x(6);
        p4=x(7);
        taom=x(8);
        atao=exp(h/taom);
        f=[h*(-p2*Ieff)+Ieff;...
            h*(p1*(Gb-Gt)-p4*Ieff*Gt+Rc)+Gt;...
            2*Rc/atao-Rc_1/(atao^2);...
            Rc;...
            p1;...
            p2;...
            p4;...
            taom];
    end
    function g=g_fcn(x)
        g=x(2);
    end
end

